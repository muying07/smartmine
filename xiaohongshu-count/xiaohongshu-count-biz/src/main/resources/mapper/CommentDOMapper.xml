<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muying.xiaohongshu.count.biz.domain.mapper.CommentDOMapper">
  <resultMap id="BaseResultMap" type="com.muying.xiaohongshu.count.biz.domain.entity.CommentDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="note_id" jdbcType="BIGINT" property="noteId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="content_uuid" jdbcType="VARCHAR" property="contentUuid" />
    <result column="is_content_empty" jdbcType="BIT" property="isContentEmpty" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="reply_total" jdbcType="BIGINT" property="replyTotal" />
    <result column="like_total" jdbcType="BIGINT" property="likeTotal" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="reply_comment_id" jdbcType="BIGINT" property="replyCommentId" />
    <result column="reply_user_id" jdbcType="BIGINT" property="replyUserId" />
    <result column="is_top" jdbcType="TINYINT" property="isTop" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, note_id, user_id, content_uuid, is_content_empty, image_url, `level`, reply_total,
    like_total, parent_id, reply_comment_id, reply_user_id, is_top, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCommentIds" resultMap="BaseResultMap" parameterType="list">
    select
    id, level, parent_id, user_id
    from t_comment
    where id in
    <foreach collection="commentIds" open="(" separator="," close=")" item="commentId">
      #{commentId}
    </foreach>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.muying.xiaohongshu.count.biz.domain.entity.CommentDO">
    insert into t_comment (id, content, avatar, 
      nickname, mail, website, 
      router_url, create_time, update_time, 
      is_deleted, reply_comment_id, parent_comment_id, 
      reason, `status`)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{website,jdbcType=VARCHAR}, 
      #{routerUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=TINYINT}, #{replyCommentId,jdbcType=BIGINT}, #{parentCommentId,jdbcType=BIGINT}, 
      #{reason,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.muying.xiaohongshu.count.biz.domain.entity.CommentDO">
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="website != null">
        website,
      </if>
      <if test="routerUrl != null">
        router_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="replyCommentId != null">
        reply_comment_id,
      </if>
      <if test="parentCommentId != null">
        parent_comment_id,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="website != null">
        #{website,jdbcType=VARCHAR},
      </if>
      <if test="routerUrl != null">
        #{routerUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="replyCommentId != null">
        #{replyCommentId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null">
        #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.muying.xiaohongshu.count.biz.domain.entity.CommentDO">
    update t_comment
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="website != null">
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="routerUrl != null">
        router_url = #{routerUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="replyCommentId != null">
        reply_comment_id = #{replyCommentId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentId != null">
        parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muying.xiaohongshu.count.biz.domain.entity.CommentDO">
    update t_comment
    set content = #{content,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      website = #{website,jdbcType=VARCHAR},
      router_url = #{routerUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      reply_comment_id = #{replyCommentId,jdbcType=BIGINT},
      parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      reason = #{reason,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateChildCommentTotal" parameterType="map">
    update t_comment
    set child_comment_total = child_comment_total + #{count}, update_time = now()
    where id = #{parentId} and level = 1
  </update>


</mapper>